{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_verifier",
          "type": "address",
          "internalType": "contract IRiscZeroVerifier"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "imageId",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proofNonce",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "updateRange",
      "inputs": [
        {
          "name": "_commit",
          "type": "tuple",
          "internalType": "struct Blobstream0.RangeCommitment",
          "components": [
            {
              "name": "trustedHeaderHash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "newHeight",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "newHeaderHash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "merkleRoot",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        },
        {
          "name": "_seal",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "verifier",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IRiscZeroVerifier"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verifyAttestation",
      "inputs": [
        {
          "name": "_proofNonce",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_tuple",
          "type": "tuple",
          "internalType": "struct DataRootTuple",
          "components": [
            {
              "name": "height",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "dataRoot",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        },
        {
          "name": "_proof",
          "type": "tuple",
          "internalType": "struct BinaryMerkleProof",
          "components": [
            {
              "name": "sideNodes",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "key",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "numLeaves",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b50604051610d80380380610d8083398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610cef61009160003960008181608901526101c70152610cef6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631f3302a91461005c5780632b7ac3f3146100845780639e3a09be146100c3578063ce0bb7e4146100d8578063ef3f7dd5146100ef575b600080fd5b61006f61006a3660046109a7565b610116565b60405190151581526020015b60405180910390f35b6100ab7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161007b565b6100d66100d1366004610ac9565b610183565b005b6100e160005481565b60405190815260200161007b565b6100e17f6cd5f9098a32e899c8ad703f0799470fcaa9819ff614031e96ce74e7934e1a1081565b600083158061012757506000548410155b156101345750600061017c565b600084815260016020908152604080832054815187518185015292870151838301528151808403830181526060909301909152919061017690839086906102bf565b50925050505b9392505050565b6040805184516020808301919091528501518183015290840151606080830191909152840151608082015260009060a00160405160208183030381529060405290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ab750e7584847f6cd5f9098a32e899c8ad703f0799470fcaa9819ff614031e96ce74e7934e1a1060001b60028660405161022a9190610baf565b602060405180830381855afa158015610247573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061026a9190610bbb565b6040518563ffffffff1660e01b81526004016102899493929190610bd4565b60006040518083038186803b1580156102a157600080fd5b505afa1580156102b5573d6000803e3d6000fd5b5050505050505050565b60008060018460400151116102e757835151156102e257506000905060016103b8565b61030d565b6102f9846020015185604001516103c0565b8451511461030d57506000905060016103b8565b836040015184602001511061032857506000905060026103b8565b600061033384610458565b8551519091506000036103665784604001516001036103595785149150600090506103b8565b60008092509250506103b8565b60008061038187602001518860400151858a600001516104cd565b9092509050600081600581111561039a5761039a610c14565b146103ad576000945092506103b8915050565b508614925060009150505b935093915050565b6000600182116103d257506000610452565b6103db82610657565b6103e790610100610c40565b905060006103f6600183610c40565b6001901b90506001816104099190610c40565b84116104155750610452565b80600103610427576001915050610452565b6104436104348286610c40565b61043e8386610c40565b6103c0565b61044e906001610c53565b9150505b92915050565b60006002600060f81b83604051602001610473929190610c66565b60408051601f198184030181529082905261048d91610baf565b602060405180830381855afa1580156104aa573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906104529190610bbb565b600080846000036104e35750829050600361064e565b84600103610508578251156104fd5750829050600461064e565b50829050600061064e565b825160000361051c5750829050600561064e565b600061052786610684565b905060006105448560006001885161053f9190610c40565b6106c5565b90506000828910156105c857600061055e8a858a866104cd565b92509050600082600581111561057657610576610c14565b146105895750869450925061064e915050565b6105b9818860018a5161059c9190610c40565b815181106105ac576105ac610c8a565b6020026020010151610850565b6000955095505050505061064e565b60006105e86105d7858c610c40565b6105e1868c610c40565b8a866104cd565b92509050600082600581111561060057610600610c14565b146106135750869450925061064e915050565b61064387600189516106259190610c40565b8151811061063557610635610c8a565b602002602001015182610850565b600095509550505050505b94509492505050565b60005b81816001901b101561067857610671600182610c53565b905061065a565b61045281610100610c40565b6000600182101561069457600080fd5b600061069f836108ce565b905060006106ae600183610c40565b6001901b905083810361017c5760011c9392505050565b60608183111561072f5760405162461bcd60e51b815260206004820152602a60248201527f496e76616c69642072616e67653a205f626567696e2069732067726561746572604482015269081d1a185b8817d95b9960b21b60648201526084015b60405180910390fd5b835183118061073e5750835182115b156107a35760405162461bcd60e51b815260206004820152602f60248201527f496e76616c69642072616e67653a205f626567696e206f72205f656e6420617260448201526e65206f7574206f6620626f756e647360881b6064820152608401610726565b60006107af8484610c40565b67ffffffffffffffff8111156107c7576107c76108f1565b6040519080825280602002602001820160405280156107f0578160200160208202803683370190505b509050835b838110156108475785818151811061080f5761080f610c8a565b60200260200101518286836108249190610c40565b8151811061083457610834610c8a565b60209081029190910101526001016107f5565b50949350505050565b604051600160f81b6020820152602181018390526041810182905260009060029060610160408051601f198184030181529082905261088e91610baf565b602060405180830381855afa1580156108ab573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061017c9190610bbb565b6000805b821561045257806108e281610ca0565b915050600183901c92506108d2565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561092a5761092a6108f1565b60405290565b6040516060810167ffffffffffffffff8111828210171561092a5761092a6108f1565b6040516080810167ffffffffffffffff8111828210171561092a5761092a6108f1565b604051601f8201601f1916810167ffffffffffffffff8111828210171561099f5761099f6108f1565b604052919050565b600080600083850360808112156109bd57600080fd5b8435935060206040601f19830112156109d557600080fd5b6109dd610907565b86820135815260408701358282015293506060860135915067ffffffffffffffff80831115610a0b57600080fd5b9186019160608389031215610a1f57600080fd5b610a27610930565b833582811115610a3657600080fd5b8401601f81018a13610a4757600080fd5b803583811115610a5957610a596108f1565b8060051b9350610a6a858501610976565b818152938201850193858101908c861115610a8457600080fd5b928601925b85841015610aa257833582529286019290860190610a89565b80855250505050828401358382015260408401356040820152809450505050509250925092565b600080600083850360a0811215610adf57600080fd5b6080811215610aed57600080fd5b50610af6610953565b8435815260208501356020820152604085013560408201526060850135606082015280935050608084013567ffffffffffffffff80821115610b3757600080fd5b818601915086601f830112610b4b57600080fd5b813581811115610b5a57600080fd5b876020828501011115610b6c57600080fd5b6020830194508093505050509250925092565b6000815160005b81811015610ba05760208185018101518683015201610b86565b50600093019283525090919050565b600061017c8284610b7f565b600060208284031215610bcd57600080fd5b5051919050565b606081528360608201528385608083013760006080858301015260006080601f19601f870116830101905083602083015282604083015295945050505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561045257610452610c2a565b8082018082111561045257610452610c2a565b6001600160f81b0319831681526000610c826001830184610b7f565b949350505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610cb257610cb2610c2a565b506001019056fea264697066735822122056c994ae416acf08a16567467af2812e22337e9c714ab47ad7398006e77bffce64736f6c63430008170033",
    "sourceMap": "1019:2030:43:-:0;;;2173:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2224:20:43;;;1019:2030;;14:317:47;111:6;164:2;152:9;143:7;139:23;135:32;132:52;;;180:1;177;170:12;132:52;206:16;;-1:-1:-1;;;;;251:31:47;;241:42;;231:70;;297:1;294;287:12;231:70;320:5;14:317;-1:-1:-1;;;14:317:47:o;:::-;1019:2030:43;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80631f3302a91461005c5780632b7ac3f3146100845780639e3a09be146100c3578063ce0bb7e4146100d8578063ef3f7dd5146100ef575b600080fd5b61006f61006a3660046109a7565b610116565b60405190151581526020015b60405180910390f35b6100ab7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161007b565b6100d66100d1366004610ac9565b610183565b005b6100e160005481565b60405190815260200161007b565b6100e17f6cd5f9098a32e899c8ad703f0799470fcaa9819ff614031e96ce74e7934e1a1081565b600083158061012757506000548410155b156101345750600061017c565b600084815260016020908152604080832054815187518185015292870151838301528151808403830181526060909301909152919061017690839086906102bf565b50925050505b9392505050565b6040805184516020808301919091528501518183015290840151606080830191909152840151608082015260009060a00160405160208183030381529060405290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ab750e7584847f6cd5f9098a32e899c8ad703f0799470fcaa9819ff614031e96ce74e7934e1a1060001b60028660405161022a9190610baf565b602060405180830381855afa158015610247573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061026a9190610bbb565b6040518563ffffffff1660e01b81526004016102899493929190610bd4565b60006040518083038186803b1580156102a157600080fd5b505afa1580156102b5573d6000803e3d6000fd5b5050505050505050565b60008060018460400151116102e757835151156102e257506000905060016103b8565b61030d565b6102f9846020015185604001516103c0565b8451511461030d57506000905060016103b8565b836040015184602001511061032857506000905060026103b8565b600061033384610458565b8551519091506000036103665784604001516001036103595785149150600090506103b8565b60008092509250506103b8565b60008061038187602001518860400151858a600001516104cd565b9092509050600081600581111561039a5761039a610c14565b146103ad576000945092506103b8915050565b508614925060009150505b935093915050565b6000600182116103d257506000610452565b6103db82610657565b6103e790610100610c40565b905060006103f6600183610c40565b6001901b90506001816104099190610c40565b84116104155750610452565b80600103610427576001915050610452565b6104436104348286610c40565b61043e8386610c40565b6103c0565b61044e906001610c53565b9150505b92915050565b60006002600060f81b83604051602001610473929190610c66565b60408051601f198184030181529082905261048d91610baf565b602060405180830381855afa1580156104aa573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906104529190610bbb565b600080846000036104e35750829050600361064e565b84600103610508578251156104fd5750829050600461064e565b50829050600061064e565b825160000361051c5750829050600561064e565b600061052786610684565b905060006105448560006001885161053f9190610c40565b6106c5565b90506000828910156105c857600061055e8a858a866104cd565b92509050600082600581111561057657610576610c14565b146105895750869450925061064e915050565b6105b9818860018a5161059c9190610c40565b815181106105ac576105ac610c8a565b6020026020010151610850565b6000955095505050505061064e565b60006105e86105d7858c610c40565b6105e1868c610c40565b8a866104cd565b92509050600082600581111561060057610600610c14565b146106135750869450925061064e915050565b61064387600189516106259190610c40565b8151811061063557610635610c8a565b602002602001015182610850565b600095509550505050505b94509492505050565b60005b81816001901b101561067857610671600182610c53565b905061065a565b61045281610100610c40565b6000600182101561069457600080fd5b600061069f836108ce565b905060006106ae600183610c40565b6001901b905083810361017c5760011c9392505050565b60608183111561072f5760405162461bcd60e51b815260206004820152602a60248201527f496e76616c69642072616e67653a205f626567696e2069732067726561746572604482015269081d1a185b8817d95b9960b21b60648201526084015b60405180910390fd5b835183118061073e5750835182115b156107a35760405162461bcd60e51b815260206004820152602f60248201527f496e76616c69642072616e67653a205f626567696e206f72205f656e6420617260448201526e65206f7574206f6620626f756e647360881b6064820152608401610726565b60006107af8484610c40565b67ffffffffffffffff8111156107c7576107c76108f1565b6040519080825280602002602001820160405280156107f0578160200160208202803683370190505b509050835b838110156108475785818151811061080f5761080f610c8a565b60200260200101518286836108249190610c40565b8151811061083457610834610c8a565b60209081029190910101526001016107f5565b50949350505050565b604051600160f81b6020820152602181018390526041810182905260009060029060610160408051601f198184030181529082905261088e91610baf565b602060405180830381855afa1580156108ab573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061017c9190610bbb565b6000805b821561045257806108e281610ca0565b915050600183901c92506108d2565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561092a5761092a6108f1565b60405290565b6040516060810167ffffffffffffffff8111828210171561092a5761092a6108f1565b6040516080810167ffffffffffffffff8111828210171561092a5761092a6108f1565b604051601f8201601f1916810167ffffffffffffffff8111828210171561099f5761099f6108f1565b604052919050565b600080600083850360808112156109bd57600080fd5b8435935060206040601f19830112156109d557600080fd5b6109dd610907565b86820135815260408701358282015293506060860135915067ffffffffffffffff80831115610a0b57600080fd5b9186019160608389031215610a1f57600080fd5b610a27610930565b833582811115610a3657600080fd5b8401601f81018a13610a4757600080fd5b803583811115610a5957610a596108f1565b8060051b9350610a6a858501610976565b818152938201850193858101908c861115610a8457600080fd5b928601925b85841015610aa257833582529286019290860190610a89565b80855250505050828401358382015260408401356040820152809450505050509250925092565b600080600083850360a0811215610adf57600080fd5b6080811215610aed57600080fd5b50610af6610953565b8435815260208501356020820152604085013560408201526060850135606082015280935050608084013567ffffffffffffffff80821115610b3757600080fd5b818601915086601f830112610b4b57600080fd5b813581811115610b5a57600080fd5b876020828501011115610b6c57600080fd5b6020830194508093505050509250925092565b6000815160005b81811015610ba05760208185018101518683015201610b86565b50600093019283525090919050565b600061017c8284610b7f565b600060208284031215610bcd57600080fd5b5051919050565b606081528360608201528385608083013760006080858301015260006080601f19601f870116830101905083602083015282604083015295945050505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561045257610452610c2a565b8082018082111561045257610452610c2a565b6001600160f81b0319831681526000610c826001830184610b7f565b949350505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610cb257610cb2610c2a565b506001019056fea264697066735822122056c994ae416acf08a16567467af2812e22337e9c714ab47ad7398006e77bffce64736f6c63430008170033",
    "sourceMap": "1019:2030:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2556:491;;;;;;:::i;:::-;;:::i;:::-;;;3088:14:47;;3081:22;3063:41;;3051:2;3036:18;2556:491:43;;;;;;;;1359:43;;;;;;;;-1:-1:-1;;;;;3306:32:47;;;3288:51;;3276:2;3261:18;1359:43:43;3115:230:47;2327:223:43;;;;;;:::i;:::-;;:::i;:::-;;1929:25;;;;;;;;;4528::47;;;4516:2;4501:18;1929:25:43;4382:177:47;1803:56:43;;773:66:44;1803:56:43;;2556:491;2719:4;2739:16;;;:45;;;2774:10;;2759:11;:25;;2739:45;2735:88;;;-1:-1:-1;2807:5:43;2800:12;;2735:88;2833:12;2848:24;;;:11;:24;;;;;;;;;2982:18;;4966:13:47;;2982:18:43;;;4948:32:47;5024:17;;;5018:24;4996:20;;;4989:54;2982:18:43;;;;;;;;;4921::47;;;;2982::43;;;2848:24;2833:12;2907:103;;2848:24;;2962:6;;2907:23;:103::i;:::-;-1:-1:-1;2883:127:43;-1:-1:-1;;;2556:491:43;;;;;;:::o;2327:223::-;2466:19;;;5287:13:47;;2466:19:43;;;;5269:32:47;;;;5345:17;;5339:24;5317:20;;;5310:54;5408:17;;;5402:24;5380:20;;;;5373:54;;;;5471:17;;5465:24;5443:20;;;5436:54;2443:20:43;;5241:19:47;;2466::43;;;;;;;;;;;;2443:42;;2495:8;-1:-1:-1;;;;;2495:15:43;;2511:5;;773:66:44;765:75;;2527:15:43;2534:7;2527:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2495:48;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2433:117;2327:223;;;:::o;1342:1444:6:-;1470:4;1476:10;1592:1;1573:5;:15;;;:20;1569:326;;1613:15;;:22;:27;1609:117;;-1:-1:-1;1668:5:6;;-1:-1:-1;1675:35:6;1660:51;;1609:117;1569:326;;;1772:45;1790:5;:9;;;1801:5;:15;;;1772:17;:45::i;:::-;1746:15;;:22;:71;1742:153;;-1:-1:-1;1841:5:6;;-1:-1:-1;1848:35:6;1833:51;;1742:153;1954:5;:15;;;1941:5;:9;;;:28;1937:98;;-1:-1:-1;1993:5:6;;-1:-1:-1;2000:23:6;1985:39;;1937:98;2131:14;2148:16;2159:4;2148:10;:16::i;:::-;2281:15;;:22;2131:33;;-1:-1:-1;2281:15:6;:27;2277:232;;2328:5;:15;;;2347:1;2328:20;2324:175;;2376:14;;;-1:-1:-1;2392:18:6;;-1:-1:-1;2368:43:6;;2324:175;2458:5;2465:18;2450:34;;;;;;;2324:175;2520:20;2542:16;2562:68;2578:5;:9;;;2589:5;:15;;;2606:6;2614:5;:15;;;2562;:68::i;:::-;2519:111;;-1:-1:-1;2519:111:6;-1:-1:-1;2654:18:6;2645:5;:27;;;;;;;;:::i;:::-;;2641:79;;2696:5;;-1:-1:-1;2703:5:6;-1:-1:-1;2688:21:6;;-1:-1:-1;;2688:21:6;2641:79;-1:-1:-1;2738:20:6;;;-1:-1:-1;2760:18:6;;-1:-1:-1;;1342:1444:6;;;;;;;:::o;936:1011:4:-;1009:18;1052:1;1039:9;:14;1035:125;;-1:-1:-1;1152:1:4;1145:8;;1035:125;1304:25;1319:9;1304:14;:25::i;:::-;1281:48;;245:3:2;1281:48:4;:::i;:::-;1268:61;-1:-1:-1;1394:28:4;1432:14;1445:1;1268:61;1432:14;:::i;:::-;1426:1;:21;;1394:54;;1567:1;1544:20;:24;;;;:::i;:::-;1537:3;:31;1533:412;;1580:17;;;1533:412;1711:20;1735:1;1711:25;1707:238;;1755:1;1748:8;;;;;1707:238;1859:79;1877:26;1883:20;1877:3;:26;:::i;:::-;1905:32;1917:20;1905:9;:32;:::i;:::-;1859:17;:79::i;:::-;1855:83;;:1;:83;:::i;:::-;1848:90;;;936:1011;;;;;:::o;868:140:7:-;921:14;952:53;340:4:2;976:21:7;;999:4;959:45;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;959:45:7;;;;;;;;;;952:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2983:1463:6:-;3132:7;3141:10;3171:9;3184:1;3171:14;3167:103;;-1:-1:-1;3209:8:6;;-1:-1:-1;3219:39:6;3201:58;;3167:103;3283:9;3296:1;3283:14;3279:206;;3317:16;;:21;3313:111;;-1:-1:-1;3366:8:6;;-1:-1:-1;3376:32:6;3358:51;;3313:111;-1:-1:-1;3445:8:6;;-1:-1:-1;3455:18:6;3437:37;;3279:206;3498:9;:16;3518:1;3498:21;3494:109;;-1:-1:-1;3543:8:6;;-1:-1:-1;3553:38:6;3535:57;;3494:109;3612:15;3630:25;3645:9;3630:14;:25::i;:::-;3612:43;;3665:30;3698:41;3704:9;3715:1;3737;3718:9;:16;:20;;;;:::i;:::-;3698:5;:41::i;:::-;3665:74;;3749:16;3785:7;3779:3;:13;3775:347;;;3808:16;3858:54;3874:3;3879:7;3888:8;3898:13;3858:15;:54::i;:::-;3838:74;-1:-1:-1;3838:74:6;-1:-1:-1;3939:18:6;3930:5;:27;;;;;;;;:::i;:::-;;3926:90;;-1:-1:-1;3985:8:6;;-1:-1:-1;3995:5:6;-1:-1:-1;3977:24:6;;-1:-1:-1;;3977:24:6;3926:90;4037:53;4048:8;4058:9;4087:1;4068:9;:16;:20;;;;:::i;:::-;4058:31;;;;;;;;:::i;:::-;;;;;;;4037:10;:53::i;:::-;4092:18;4029:82;;;;;;;;;;3775:347;4131:17;4179:76;4195:13;4201:7;4195:3;:13;:::i;:::-;4210:19;4222:7;4210:9;:19;:::i;:::-;4231:8;4241:13;4179:15;:76::i;:::-;4158:97;-1:-1:-1;4158:97:6;-1:-1:-1;4278:18:6;4269:5;:27;;;;;;;;:::i;:::-;;4265:82;;-1:-1:-1;4320:8:6;;-1:-1:-1;4330:5:6;-1:-1:-1;4312:24:6;;-1:-1:-1;;4312:24:6;4265:82;4364:54;4375:9;4404:1;4385:9;:16;:20;;;;:::i;:::-;4375:31;;;;;;;;:::i;:::-;;;;;;;4408:9;4364:10;:54::i;:::-;4420:18;4356:83;;;;;;;;2983:1463;;;;;;;;:::o;315:362:4:-;372:19;556:72;584:9;569:11;564:1;:16;;563:30;556:72;;;605:16;620:1;605:16;;:::i;:::-;;;556:72;;;640:34;663:11;245:3:2;640:34:4;:::i;2318:492::-;2367:7;2680:1;2675;:6;;2667:15;;;;;;2689:14;2706:11;2715:1;2706:8;:11::i;:::-;2689:28;-1:-1:-1;2723:9:4;2741:10;2750:1;2689:28;2741:10;:::i;:::-;2735:1;:17;;2723:29;;2767:1;2762;:6;2758:36;;2786:1;2780:7;2806:1;2318:492;-1:-1:-1;;;2318:492:4:o;4913:544:6:-;5005:16;5046:4;5037:6;:13;5033:96;;;5066:52;;-1:-1:-1;;;5066:52:6;;7888:2:47;5066:52:6;;;7870:21:47;7927:2;7907:18;;;7900:30;7966:34;7946:18;;;7939:62;-1:-1:-1;;;8017:18:47;;;8010:40;8067:19;;5066:52:6;;;;;;;;5033:96;5151:5;:12;5142:6;:21;:44;;;;5174:5;:12;5167:4;:19;5142:44;5138:132;;;5202:57;;-1:-1:-1;;;5202:57:6;;8299:2:47;5202:57:6;;;8281:21:47;8338:2;8318:18;;;8311:30;8377:34;8357:18;;;8350:62;-1:-1:-1;;;8428:18:47;;;8421:45;8483:19;;5202:57:6;8097:411:47;5138:132:6;5279:20;5316:13;5323:6;5316:4;:13;:::i;:::-;5302:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5302:28:6;-1:-1:-1;5279:51:6;-1:-1:-1;5357:6:6;5340:91;5369:4;5365:1;:8;5340:91;;;5412:5;5418:1;5412:8;;;;;;;;:::i;:::-;;;;;;;5394:3;5402:6;5398:1;:10;;;;:::i;:::-;5394:15;;;;;;;;:::i;:::-;;;;;;;;;;:26;5375:3;;5340:91;;;-1:-1:-1;5447:3:6;4913:544;-1:-1:-1;;;;4913:544:6:o;415:157:7:-;516:52;;-1:-1:-1;;;516:52:7;;;8696:39:47;8751:11;;;8744:27;;;8787:12;;;8780:28;;;478:14:7;;509:60;;8824:12:47;;516:52:7;;;-1:-1:-1;;516:52:7;;;;;;;;;;509:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2078:159:4:-;2121:7;;2160:56;2167:6;;2160:56;;2185:7;;;;:::i;:::-;;;;2208:1;2202:7;;;;;2160:56;;14:127:47;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:257;218:4;212:11;;;250:17;;297:18;282:34;;318:22;;;279:62;276:88;;;344:18;;:::i;:::-;380:4;373:24;146:257;:::o;408:251::-;480:2;474:9;522:2;510:15;;555:18;540:34;;576:22;;;537:62;534:88;;;602:18;;:::i;664:253::-;736:2;730:9;778:4;766:17;;813:18;798:34;;834:22;;;795:62;792:88;;;860:18;;:::i;922:275::-;993:2;987:9;1058:2;1039:13;;-1:-1:-1;;1035:27:47;1023:40;;1093:18;1078:34;;1114:22;;;1075:62;1072:88;;;1140:18;;:::i;:::-;1176:2;1169:22;922:275;;-1:-1:-1;922:275:47:o;1202:1716::-;1341:6;1349;1357;1401:9;1392:7;1388:23;1431:3;1427:2;1423:12;1420:32;;;1448:1;1445;1438:12;1420:32;1471:23;;;-1:-1:-1;1513:2:47;1549:4;-1:-1:-1;;1531:16:47;;1527:27;1524:47;;;1567:1;1564;1557:12;1524:47;1593:22;;:::i;:::-;1651:18;;;1638:32;1624:47;;1731:4;1716:20;;1703:34;1687:14;;;1680:58;1580:35;-1:-1:-1;1813:2:47;1798:18;;1785:32;;-1:-1:-1;1836:18:47;1866:14;;;1863:34;;;1893:1;1890;1883:12;1863:34;1916:22;;;;1972:2;1954:16;;;1950:25;1947:45;;;1988:1;1985;1978:12;1947:45;2016:22;;:::i;:::-;2076:2;2063:16;2104:2;2094:8;2091:16;2088:36;;;2120:1;2117;2110:12;2088:36;2143:17;;2191:4;2183:13;;2179:27;-1:-1:-1;2169:55:47;;2220:1;2217;2210:12;2169:55;2256:2;2243:16;2278:2;2274;2271:10;2268:36;;;2284:18;;:::i;:::-;2330:2;2327:1;2323:10;2313:20;;2353:28;2377:2;2373;2369:11;2353:28;:::i;:::-;2415:15;;;2485:11;;;2481:20;;;2446:12;;;;2513:19;;;2510:39;;;2545:1;2542;2535:12;2510:39;2569:11;;;;2589:142;2605:6;2600:3;2597:15;2589:142;;;2671:17;;2659:30;;2622:12;;;;2709;;;;2589:142;;;2756:5;2747:7;2740:22;;;;;2817:2;2813;2809:11;2796:25;2791:2;2782:7;2778:16;2771:51;2879:4;2875:2;2871:13;2858:27;2851:4;2842:7;2838:18;2831:55;2905:7;2895:17;;;;;;1202:1716;;;;;:::o;3350:1027::-;3463:6;3471;3479;3523:9;3514:7;3510:23;3553:3;3549:2;3545:12;3542:32;;;3570:1;3567;3560:12;3542:32;3594:4;3590:2;3586:13;3583:33;;;3612:1;3609;3602:12;3583:33;;3638:22;;:::i;:::-;3696:9;3683:23;3676:5;3669:38;3767:2;3756:9;3752:18;3739:32;3734:2;3727:5;3723:14;3716:56;3832:2;3821:9;3817:18;3804:32;3799:2;3792:5;3788:14;3781:56;3897:2;3886:9;3882:18;3869:32;3864:2;3857:5;3853:14;3846:56;3921:5;3911:15;;;3977:4;3966:9;3962:20;3949:34;4002:18;4043:2;4035:6;4032:14;4029:34;;;4059:1;4056;4049:12;4029:34;4097:6;4086:9;4082:22;4072:32;;4142:7;4135:4;4131:2;4127:13;4123:27;4113:55;;4164:1;4161;4154:12;4113:55;4204:2;4191:16;4230:2;4222:6;4219:14;4216:34;;;4246:1;4243;4236:12;4216:34;4291:7;4286:2;4277:6;4273:2;4269:15;4265:24;4262:37;4259:57;;;4312:1;4309;4302:12;4259:57;4343:2;4339;4335:11;4325:21;;4365:6;4355:16;;;;;3350:1027;;;;;:::o;5501:322::-;5542:3;5580:5;5574:12;5604:1;5614:128;5628:6;5625:1;5622:13;5614:128;;;5725:4;5710:13;;;5706:24;;5700:31;5687:11;;;5680:52;5643:12;5614:128;;;-1:-1:-1;5797:1:47;5761:16;;5786:13;;;-1:-1:-1;5761:16:47;;5501:322;-1:-1:-1;5501:322:47:o;5828:189::-;5957:3;5982:29;6007:3;5999:6;5982:29;:::i;6022:184::-;6092:6;6145:2;6133:9;6124:7;6120:23;6116:32;6113:52;;;6161:1;6158;6151:12;6113:52;-1:-1:-1;6184:16:47;;6022:184;-1:-1:-1;6022:184:47:o;6211:535::-;6424:2;6413:9;6406:21;6463:6;6458:2;6447:9;6443:18;6436:34;6521:6;6513;6507:3;6496:9;6492:19;6479:49;6578:1;6572:3;6563:6;6552:9;6548:22;6544:32;6537:43;6387:4;6648:3;6641:2;6637:7;6632:2;6624:6;6620:15;6616:29;6605:9;6601:45;6597:55;6589:63;;6690:6;6683:4;6672:9;6668:20;6661:36;6733:6;6728:2;6717:9;6713:18;6706:34;6211:535;;;;;;;:::o;6751:127::-;6812:10;6807:3;6803:20;6800:1;6793:31;6843:4;6840:1;6833:15;6867:4;6864:1;6857:15;6883:127;6944:10;6939:3;6935:20;6932:1;6925:31;6975:4;6972:1;6965:15;6999:4;6996:1;6989:15;7015:128;7082:9;;;7103:11;;;7100:37;;;7117:18;;:::i;7148:125::-;7213:9;;;7234:10;;;7231:36;;;7247:18;;:::i;7278:271::-;-1:-1:-1;;;;;;7463:26:47;;7451:39;;7433:3;7506:37;7540:1;7531:11;;7523:6;7506:37;:::i;:::-;7499:44;7278:271;-1:-1:-1;;;;7278:271:47:o;7554:127::-;7615:10;7610:3;7606:20;7603:1;7596:31;7646:4;7643:1;7636:15;7670:4;7667:1;7660:15;8847:135;8886:3;8907:17;;;8904:43;;8927:18;;:::i;:::-;-1:-1:-1;8974:1:47;8963:13;;8847:135::o",
    "linkReferences": {},
    "immutableReferences": {
      "51164": [
        {
          "start": 137,
          "length": 32
        },
        {
          "start": 455,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "imageId()": "ef3f7dd5",
    "proofNonce()": "ce0bb7e4",
    "updateRange((bytes32,uint256,bytes32,bytes32),bytes)": "9e3a09be",
    "verifier()": "2b7ac3f3",
    "verifyAttestation(uint256,(uint256,bytes32),(bytes32[],uint256,uint256))": "1f3302a9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRiscZeroVerifier\",\"name\":\"_verifier\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"imageId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proofNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"trustedHeaderHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"newHeaderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct Blobstream0.RangeCommitment\",\"name\":\"_commit\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_seal\",\"type\":\"bytes\"}],\"name\":\"updateRange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"contract IRiscZeroVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proofNonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"dataRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct DataRootTuple\",\"name\":\"_tuple\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"sideNodes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"key\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numLeaves\",\"type\":\"uint256\"}],\"internalType\":\"struct BinaryMerkleProof\",\"name\":\"_proof\",\"type\":\"tuple\"}],\"name\":\"verifyAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"A starter application using RISC Zero.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initialize the contract, binding it to a specified RISC Zero verifier.\"},\"imageId()\":{\"notice\":\"Image ID of the only zkVM binary to accept verification from.         The image ID is similar to the address of a smart contract.         It uniquely represents the logic of that guest program,         ensuring that only proofs generated from a pre-defined guest program         (in this case, checking if a number is even) are considered valid.\"},\"updateRange((bytes32,uint256,bytes32,bytes32),bytes)\":{\"notice\":\"Validate a proof of a new header range, update state.\"},\"verifier()\":{\"notice\":\"RISC Zero verifier contract address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Blobstream0.sol\":\"Blobstream0\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":blobstream-contracts/=lib/blobstream-contracts/src/\",\":blobstream/=lib/blobstream-contracts/src/\",\":ds-test/=lib/blobstream-contracts/lib/ds-test/src/\",\":erc4626-tests/=lib/blobstream-contracts/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/blobstream-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":risc0-ethereum/=lib/risc0-ethereum/\",\":risc0/=lib/risc0-ethereum/contracts/src/\",\":tree/=lib/blobstream-contracts/src/lib/tree/\",\":verifier/=lib/blobstream-contracts/src/lib/verifier/\"]},\"sources\":{\"lib/blobstream-contracts/src/DataRootTuple.sol\":{\"keccak256\":\"0x0526597d14a6d7f258ec48e434a9b60c9a8781764a8f23c878d49926daeb5d1c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06ee253f8d0f58dbe66c64cb5d2945182ba3bced088167472d8f953cec421916\",\"dweb:/ipfs/QmUF9jjr6bH3pPgjGAZqYhsUn7EevqU7kZn8RBqQ4EoU2w\"]},\"lib/blobstream-contracts/src/IDAOracle.sol\":{\"keccak256\":\"0xc35648b17d3587bc3a627f67a328874db536ee24c11b970c3c57226d69a32eec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://362610301e6057d10777c84111d4bb43af53af75a488fb8ab8666a775302a3fc\",\"dweb:/ipfs/QmURgSTYhiguV1oCUARaTTWrpFHg5nMEtxhPVcpUDuEKq6\"]},\"lib/blobstream-contracts/src/lib/tree/Constants.sol\":{\"keccak256\":\"0x2050b2be8a739ce250cc5cea1556936c7937915b5d7fde269dd70e8e7eb660c4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://946ea30d1001048a800f60bb24d2ab7ecf5f92ae2abd212f3f855e37a6840ce7\",\"dweb:/ipfs/QmW2PnhAB5h2eCCM6Vafg8ZUpBttjLTbBhtXjJh3SSrYEN\"]},\"lib/blobstream-contracts/src/lib/tree/Types.sol\":{\"keccak256\":\"0xa47e9e20fef88264acdf1fc6bc0b3bb9f23c7022f5de8d203a1014895a606958\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d480249b6adf8730bffcf26eed5902eb9fd1d56d11f931b35a9e19c6415b3f47\",\"dweb:/ipfs/QmPCrcMmQdNMYG232WxEg2zZRFvXQqdEZgwQNMaDJ2oNab\"]},\"lib/blobstream-contracts/src/lib/tree/Utils.sol\":{\"keccak256\":\"0x9760cb3ab3d4f412949b9be1bbdf5d9e7954cad44a94a4f7fe90fcffb86fe7fa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06edf92a63d5b2c3459800acc6945071ee069be6df03b70f28440c5c732465aa\",\"dweb:/ipfs/QmU4LnS5ckxXpEBE82y5gfsNxn5gUQPh273nLrmfPP9pjD\"]},\"lib/blobstream-contracts/src/lib/tree/binary/BinaryMerkleProof.sol\":{\"keccak256\":\"0x9fb953284b455b544091f058fdb11ac73928093517333909c0744d9319410688\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://938230a60210345fe7cc661708c4fe0db663a5f5b5306f05fe4023b44f104b6e\",\"dweb:/ipfs/QmUvcJuDmwnbRzXX5qgV4Mckg6ujvMeo46SrTPvgpPhFSF\"]},\"lib/blobstream-contracts/src/lib/tree/binary/BinaryMerkleTree.sol\":{\"keccak256\":\"0x90dc9ac613014c2d3fcebbd23f2b5af67188b7de80b2ef853f20c91a14ce68fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4dffcfb8911d174787b05d814c423ea368c6526e32d762576fb5109e517a185f\",\"dweb:/ipfs/QmRxYnjwkEANhqXkoNifG2kbGtEymyLRU5h2NyPTZ5wbSE\"]},\"lib/blobstream-contracts/src/lib/tree/binary/TreeHasher.sol\":{\"keccak256\":\"0x2f16501eac14f6e2a61de29d3aa10e3aaf8e0a594fc9cf8dc2d955bb2f6d54e0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://984a2e5d52cfdd38f2c597bddc4a2de8ad1e4dd9c81008376569a29c74fa963e\",\"dweb:/ipfs/QmaXhfHD58Jv4nSw3qw2hGwbDSPKDjFzPNYWm9Y4KWiigm\"]},\"lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol\":{\"keccak256\":\"0x19341f62c8fe3c0945ebffa4f25d49706ded741af98eaacb7ade824c947f61a4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d443c7187fd565e25acdfd3df63f14421d06dda0839470cb475546f7c9908c0\",\"dweb:/ipfs/QmeaHPjKmGZBC15iiYKsDCY1k2UY3iYZiNB6Pdc8ow6aVX\"]},\"lib/risc0-ethereum/contracts/src/Util.sol\":{\"keccak256\":\"0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c\",\"dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg\"]},\"src/Blobstream0.sol\":{\"keccak256\":\"0x837f499432a3df2fe05fce27adf72780af44d73d4aec15e1bd9a55c420450c38\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f778045fe728182b1e1b4320828afbd89a766cfee02dfab770e906ac6637f26\",\"dweb:/ipfs/QmTcYJbhgasRRC6sZ7BdFWXrjKt4coMzhrX6Nwa3DqAQ5R\"]},\"src/ImageID.sol\":{\"keccak256\":\"0xe8967f6ccab7af76364c6b97c3195094eb012c61b8f0147da2b802e6dfef3549\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a9b18c34764b158246228e246dcaf345f3d3980b293a72650508ac539c067643\",\"dweb:/ipfs/QmTDAixTKpb16bS2ivZpaQzuEp1MQfCsLKmxXqgzwTHzYZ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IRiscZeroVerifier",
              "name": "_verifier",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "imageId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proofNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Blobstream0.RangeCommitment",
              "name": "_commit",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "trustedHeaderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "newHeight",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "newHeaderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_seal",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateRange"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "verifier",
          "outputs": [
            {
              "internalType": "contract IRiscZeroVerifier",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proofNonce",
              "type": "uint256"
            },
            {
              "internalType": "struct DataRootTuple",
              "name": "_tuple",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "height",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "dataRoot",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "struct BinaryMerkleProof",
              "name": "_proof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "sideNodes",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "key",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "numLeaves",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyAttestation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Initialize the contract, binding it to a specified RISC Zero verifier."
          },
          "imageId()": {
            "notice": "Image ID of the only zkVM binary to accept verification from.         The image ID is similar to the address of a smart contract.         It uniquely represents the logic of that guest program,         ensuring that only proofs generated from a pre-defined guest program         (in this case, checking if a number is even) are considered valid."
          },
          "updateRange((bytes32,uint256,bytes32,bytes32),bytes)": {
            "notice": "Validate a proof of a new header range, update state."
          },
          "verifier()": {
            "notice": "RISC Zero verifier contract address."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "blobstream-contracts/=lib/blobstream-contracts/src/",
        "blobstream/=lib/blobstream-contracts/src/",
        "ds-test/=lib/blobstream-contracts/lib/ds-test/src/",
        "erc4626-tests/=lib/blobstream-contracts/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/blobstream-contracts/lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/",
        "risc0-ethereum/=lib/risc0-ethereum/",
        "risc0/=lib/risc0-ethereum/contracts/src/",
        "tree/=lib/blobstream-contracts/src/lib/tree/",
        "verifier/=lib/blobstream-contracts/src/lib/verifier/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Blobstream0.sol": "Blobstream0"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/blobstream-contracts/src/DataRootTuple.sol": {
        "keccak256": "0x0526597d14a6d7f258ec48e434a9b60c9a8781764a8f23c878d49926daeb5d1c",
        "urls": [
          "bzz-raw://06ee253f8d0f58dbe66c64cb5d2945182ba3bced088167472d8f953cec421916",
          "dweb:/ipfs/QmUF9jjr6bH3pPgjGAZqYhsUn7EevqU7kZn8RBqQ4EoU2w"
        ],
        "license": "Apache-2.0"
      },
      "lib/blobstream-contracts/src/IDAOracle.sol": {
        "keccak256": "0xc35648b17d3587bc3a627f67a328874db536ee24c11b970c3c57226d69a32eec",
        "urls": [
          "bzz-raw://362610301e6057d10777c84111d4bb43af53af75a488fb8ab8666a775302a3fc",
          "dweb:/ipfs/QmURgSTYhiguV1oCUARaTTWrpFHg5nMEtxhPVcpUDuEKq6"
        ],
        "license": "Apache-2.0"
      },
      "lib/blobstream-contracts/src/lib/tree/Constants.sol": {
        "keccak256": "0x2050b2be8a739ce250cc5cea1556936c7937915b5d7fde269dd70e8e7eb660c4",
        "urls": [
          "bzz-raw://946ea30d1001048a800f60bb24d2ab7ecf5f92ae2abd212f3f855e37a6840ce7",
          "dweb:/ipfs/QmW2PnhAB5h2eCCM6Vafg8ZUpBttjLTbBhtXjJh3SSrYEN"
        ],
        "license": "Apache-2.0"
      },
      "lib/blobstream-contracts/src/lib/tree/Types.sol": {
        "keccak256": "0xa47e9e20fef88264acdf1fc6bc0b3bb9f23c7022f5de8d203a1014895a606958",
        "urls": [
          "bzz-raw://d480249b6adf8730bffcf26eed5902eb9fd1d56d11f931b35a9e19c6415b3f47",
          "dweb:/ipfs/QmPCrcMmQdNMYG232WxEg2zZRFvXQqdEZgwQNMaDJ2oNab"
        ],
        "license": "Apache-2.0"
      },
      "lib/blobstream-contracts/src/lib/tree/Utils.sol": {
        "keccak256": "0x9760cb3ab3d4f412949b9be1bbdf5d9e7954cad44a94a4f7fe90fcffb86fe7fa",
        "urls": [
          "bzz-raw://06edf92a63d5b2c3459800acc6945071ee069be6df03b70f28440c5c732465aa",
          "dweb:/ipfs/QmU4LnS5ckxXpEBE82y5gfsNxn5gUQPh273nLrmfPP9pjD"
        ],
        "license": "Apache-2.0"
      },
      "lib/blobstream-contracts/src/lib/tree/binary/BinaryMerkleProof.sol": {
        "keccak256": "0x9fb953284b455b544091f058fdb11ac73928093517333909c0744d9319410688",
        "urls": [
          "bzz-raw://938230a60210345fe7cc661708c4fe0db663a5f5b5306f05fe4023b44f104b6e",
          "dweb:/ipfs/QmUvcJuDmwnbRzXX5qgV4Mckg6ujvMeo46SrTPvgpPhFSF"
        ],
        "license": "Apache-2.0"
      },
      "lib/blobstream-contracts/src/lib/tree/binary/BinaryMerkleTree.sol": {
        "keccak256": "0x90dc9ac613014c2d3fcebbd23f2b5af67188b7de80b2ef853f20c91a14ce68fd",
        "urls": [
          "bzz-raw://4dffcfb8911d174787b05d814c423ea368c6526e32d762576fb5109e517a185f",
          "dweb:/ipfs/QmRxYnjwkEANhqXkoNifG2kbGtEymyLRU5h2NyPTZ5wbSE"
        ],
        "license": "Apache-2.0"
      },
      "lib/blobstream-contracts/src/lib/tree/binary/TreeHasher.sol": {
        "keccak256": "0x2f16501eac14f6e2a61de29d3aa10e3aaf8e0a594fc9cf8dc2d955bb2f6d54e0",
        "urls": [
          "bzz-raw://984a2e5d52cfdd38f2c597bddc4a2de8ad1e4dd9c81008376569a29c74fa963e",
          "dweb:/ipfs/QmaXhfHD58Jv4nSw3qw2hGwbDSPKDjFzPNYWm9Y4KWiigm"
        ],
        "license": "Apache-2.0"
      },
      "lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol": {
        "keccak256": "0x19341f62c8fe3c0945ebffa4f25d49706ded741af98eaacb7ade824c947f61a4",
        "urls": [
          "bzz-raw://5d443c7187fd565e25acdfd3df63f14421d06dda0839470cb475546f7c9908c0",
          "dweb:/ipfs/QmeaHPjKmGZBC15iiYKsDCY1k2UY3iYZiNB6Pdc8ow6aVX"
        ],
        "license": "Apache-2.0"
      },
      "lib/risc0-ethereum/contracts/src/Util.sol": {
        "keccak256": "0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82",
        "urls": [
          "bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c",
          "dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg"
        ],
        "license": "Apache-2.0"
      },
      "src/Blobstream0.sol": {
        "keccak256": "0x837f499432a3df2fe05fce27adf72780af44d73d4aec15e1bd9a55c420450c38",
        "urls": [
          "bzz-raw://5f778045fe728182b1e1b4320828afbd89a766cfee02dfab770e906ac6637f26",
          "dweb:/ipfs/QmTcYJbhgasRRC6sZ7BdFWXrjKt4coMzhrX6Nwa3DqAQ5R"
        ],
        "license": "Apache-2.0"
      },
      "src/ImageID.sol": {
        "keccak256": "0xe8967f6ccab7af76364c6b97c3195094eb012c61b8f0147da2b802e6dfef3549",
        "urls": [
          "bzz-raw://a9b18c34764b158246228e246dcaf345f3d3980b293a72650508ac539c067643",
          "dweb:/ipfs/QmTDAixTKpb16bS2ivZpaQzuEp1MQfCsLKmxXqgzwTHzYZ"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "id": 43
}
